// Code generated by "stringer -type=Kind -linecomment -output=kind_string.go"; DO NOT EDIT.

package field

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KindAny-0]
	_ = x[KindArray-1]
	_ = x[KindNil-2]
	_ = x[KindString-3]
	_ = x[KindBool-4]
	_ = x[KindInt64-5]
	_ = x[KindUint64-6]
	_ = x[KindFloat32-7]
	_ = x[KindFloat64-8]
	_ = x[KindComplex128-9]
	_ = x[KindBinary-10]
	_ = x[KindDuration-11]
	_ = x[KindTime-12]
	_ = x[KindError-13]
	_ = x[KindGroup-14]
	_ = x[KindClosure-15]
}

const _Kind_name = "anyarraynilstringboolint64uint64float32float64complex128bytesdurationtimeerrorgroupclosure"

var _Kind_index = [...]uint8{0, 3, 8, 11, 17, 21, 26, 32, 39, 46, 56, 61, 69, 73, 78, 83, 90}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
